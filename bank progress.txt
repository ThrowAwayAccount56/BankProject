 Financial Tracker
 + FinancialTracker()
 + void AddCash(double) throw YouDontgotthatmuchmoneyException 
 + double GetExpenses(String PeriodOfTime) // Retrieves Expenses. Either weekly, monthly, yearly. Seperate into multi fuct?
 - double CalculateWeeklyExpenses() // choose which week, for new accounts the rest of the days default to 0?
 - double CalculateMonthlyExpenses // see above 
 - double CalculateYearlyExpenses // see above
 - ArrayList<double> GetWeeklyExpenses() // choose which week, for new accounts the rest of the days default to 0?
 - ArrayList<double> GetMonthlyExpenses // see above 
 - ArrayList<double> GetYearlyExpenses // see above
 + void DisplayExpenses() // graphs the expenses through the gui
 
 - List<Integer> CashSpentPerDay = new ArrayList<>();
 - Date StartDate;
............................
AccountCreation
 AccountCreation(Customer); // Initializes all the variables;
 boolean isValidInput(); // checks whether account parameter, i.e ssn, email, etc, are valid
 
...........................
AccountDeletion
 AccountDeletion(); 
 boolea IsAccountDeleted() // deletes

...........................
BankAccount
 Protected static double debt;
 Protected FinancialTracker finaTrack;
 void DepositMoney(double) throw YouDontgotthatmuchmoney //valid check number?
 void TransferMoney(BankAccount); 
 boolean IsMinumumReached() // checks if the customer has the minimum amount of money to not be charged
 
...........................
CheckingAccount extends BankAccount
 boolean isOverdraftProtected();
 void ChargeOverdraft();
 void SendMoneyToExternalAccount(mock BankAccount); // make believe paying a different account owner
...........................
InvestmentAccount extends BankAccount
 InvestmentAccount(double cash) throws Youdontgatthatmuchmoney 
 {
   if(moneybelow < Required) throw you......
 }
...........................
SavingsAccount extends BankAccount
 double calculateinterest()
 double addInterest()
 
...........................
Customer // Will inject Financial Tracker to other Accounts
 + Customer();
 + boolean isAccountRemoved()
 + boolean DeleteAccount(); 
 + void OpenSavingsAccount();
 + void OpenCheckingAccount();
 + void OpenInvestmentAccount();
 - 
 // setters and getters below
 
 // Variables
 - FinancialTracker finaTrack; 
 - List<BankAccount> accounts;
...........................
InterestRateManager // Because our bank account relies on interest rate, the IRM will determine the interest Rate for each account
  - Integer DetermineInterestRate // need more info
  + Integer GetInterestRate
  
  //Variables
  - int interestRate;
